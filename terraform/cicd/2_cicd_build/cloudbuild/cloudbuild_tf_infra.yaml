steps:
  - name: "bash"
    id: BACKEND_TF
    entrypoint: "bash"
    args: ["-c", "sed -e \"s/@@BUCKET_NAME@@/${_TF_BUCKET_NAME}/g\" -e \"s/@@MODULE@@/${_TF_MODULE}/g\" -e \"s/@@REGION@@/${LOCATION}/g\" ${_TF_BACKEND_TF_TMPL} > ${_TF_DIR}/backend.tf"]
  - name: "hashicorp/terraform"
    id: TERRAFORM_INIT
    entrypoint: "sh"
    args: ["-c", "terraform -chdir=${_TF_DIR} init -upgrade"]
  - name: "hashicorp/terraform"
    id: TERRAFORM_PLAN
    entrypoint: "sh"
    args: ["-c", "terraform -chdir=${_TF_DIR} plan ${_TF_PLAN_ARGS} -out=${_TF_PLAN_FILE}"]
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk:slim"
    id: WAIT_FOR_SCHEDULER
    entrypoint: "bash"
    args: ["-c", "apt-get install -y jq; ${_WAIT_SCRIPT} --project ${PROJECT_ID} --region ${LOCATION} --service ${_SCHEDULER_SERVICE_NAME}"]
    waitFor:
      - TERRAFORM_PLAN
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk:slim"
    id: WAIT_FOR_SCALER
    entrypoint: "bash"
    args: ["-c", "apt-get install -y jq; ${_WAIT_SCRIPT} --project ${PROJECT_ID} --region ${LOCATION} --service ${_SCALER_SERVICE_NAME}"]
    waitFor:
      - TERRAFORM_PLAN
  - name: "hashicorp/terraform"
    id: TERRAFORM_APPLY
    entrypoint: "sh"
    args: ["-c", "terraform -chdir=${_TF_DIR} apply ${_TF_PLAN_FILE}"]
    waitFor:
      - WAIT_FOR_SCHEDULER
      - WAIT_FOR_SCALER
logsBucket: "gs://${_BUCKET_NAME}/cloudbuild_logs/${TRIGGER_NAME}"
options:
  dynamic_substitutions: true
  logging: LEGACY
  logStreamingOption: STREAM_DEFAULT
  machineType: UNSPECIFIED
  substitution_option: "ALLOW_LOOSE"
substitutions:
  _TF_BUCKET_NAME: ""
  _TF_MODULE: ""
  _TF_BACKEND_TF_TMPL: ""
  _TF_DIR: "terraform/${_TF_MODULE}"
  _TF_PLAN_ARGS: ""
  _TF_PLAN_FILE: "${SHORT_SHA}_tf_plan.out"
  _SCHEDULER_SERVICE_NAME: ""
  _SCALER_SERVICE_NAME: ""
  _WAIT_SCRIPT: ""
